#!/usr/bin/env bash

# A small wrapper script for bare QEMU to spin up a VM. Kind of like a low-level,
# less-automated Packer.

# Usage:
#   1. Create a base image using build-image.sh if you haven't already done so.
#      There is no parsing of stdin. All user data is onboard.
#   2. Configure the script below to your use case.
#   3. Run up.sh in the newly-created directory for your VM to spin it up.


########################################
# CONFIG                               #
########################################

# Here you can configure the script for your own use.

# Uncomment to set the name of the existing base image you would like to
# build off of. (required)
# QEMU_BASE_IMG="debian_base.img"

# Uncomment to set the name for your new VM
# QEMU_NAME="custom-debian"

# Uncomment to set a randomized SSH port for the new VM. You still need to
# enable OpenSSH during the creation of the base image for this to be of
# use. (required)
SSH_PORT=$(shuf -i 1025-64434 -n 1)

# Uncomment to set the name of the script for spinning up your new VM.
SCRIPT_FILE="up.sh"

#########################################


if [ -z ${QEMU_BASE_IMG+x} ]
then
    echo "You must set the $QEMU_BASE_IMG variable."
    exit
fi

if [ -z ${QEMU_NAME+x} ]
then
    echo "You must set the $QEMU_NAME variable."
    exit
fi

if [ -z ${SSH_PORT+x} ]
then
    echo "You must set the $SSH_PORT variable."
    exit
fi

if [ -z ${SCRIPT_FILE+x} ]
then
    echo "You must set the $SCRIPT_FILE variable."
    exit
fi


if mkdir -p "$QEMU_NAME"/; then
    echo "Working with $QEMU_NAME/"
else
    echo "Could not create image. Aborting"
    exit
fi

QEMU_IMG="$QEMU_NAME.img"
QEMU_IMG_PATH="$QEMU_NAME/$QEMU_IMG"

if [[ -f $QEMU_IMG_PATH ]]
then
    echo "$QEMU_IMG_PATH already exists. Will not overwrite it. Aborting."
    exit
fi

if cp "$QEMU_BASE_IMG" "$QEMU_NAME"/"$QEMU_IMG"; then
    echo "Cloned $QEMU_BASE_IMG as $QEMU_IMG to $QEMU_IMG_PATH."
else
    echo "Could not clone image to $QEMU_IMG_PATH. Aborting"
    exit
fi


if [[ -f $SCRIPT_FILE ]]
then
   echo "Aborting, $SCRIPT_FILE already exists. Will not overwrite, it could be important :^)"
   exit
fi

if touch "$QEMU_NAME"/"$SCRIPT_FILE"
then
    echo 'Autogenerating startup script...'
    {
	echo "# Auto-generated by new-from-base.sh. Modify as necessary!"
	echo ""
	echo "qemu-system-x86_64 \\"
	echo "    -boot d \\"
	echo "    -drive format=raw,file=./${QEMU_IMG} \\"
	echo "    -m 4096 \\"
	echo "    -vnc 0.0.0.0:0 \\"
	echo "    -enable-kvm \\"
	echo "    -nic user,hostfwd=tcp::${SSH_PORT}-:22"
    } >> "$QEMU_NAME"/"$SCRIPT_FILE"
    chmod +x "$QEMU_NAME"/"$SCRIPT_FILE"
else
    echo "Aborting, could not create or chmod sample startup script"
    exit
fi

echo "Run ./up.sh to start the VM. Connect via VNC on port 5900 or SSH on port ${SSH_PORT}"
